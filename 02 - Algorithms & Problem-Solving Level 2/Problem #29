#include <iostream>
using namespace std;

enum enprimenotprime { prime = 1, notprime = 2 };

int readpositivenumber(string massege)
{
	int number = 0;

	while (number <= 0)
	{
		cout << massege << endl;
		cin >> number;
	}
	return number;
}

int randomnumber(int from, int to)
{
	int randnumber = rand() % (to - from + 1) + from;

	return randnumber;

}

void readarray(int arr[100], int& length)
{
	for (int i = 0; i < length; i++)
	{
		arr[i] = randomnumber(1, 100);
	}
}

void printarray(int arr[100], int length)
{


	for (int i = 0; i < length; i++)
	{
		cout << arr[i] << " ";
	}
	cout << endl;
}

enprimenotprime cheakprime(int number)
{
	int m = round(number / 2);

	for (int i = 2; i <= m; i++)
	{
		if (number % i == 0)
		{
			return enprimenotprime::notprime;
		}
	}

	return enprimenotprime::prime;
}

void arrayprimecopy(int sourcearray[100], int tocopy[100], int length, int& length2)
{
	int counter = 0;

	for (int i = 0; i < length; i++)
	{
		if (cheakprime(sourcearray[i]) == enprimenotprime::prime)
		{
			tocopy[counter] = sourcearray[i];
			counter++;
		}

	}
	length2 = --counter;
}

int main()
{
	srand((unsigned)time(NULL));


	int arr[100], length;

	length = readpositivenumber("please enter number of elements ?");

	readarray(arr, length);



	int arr2[100], length2 = 0;
	arrayprimecopy(arr, arr2, length, length2);

	cout << "\narray 1 elements : \n";
	printarray(arr, length);

	cout << "\narray 2 elements after copy :\n";
	printarray(arr2, length2);



	return 0;
}
